#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <cmath>
#include <stack>
#include <set>
#include <map>
typedef long long ll;
using namespace std;

ll cst[1 << 16];
ll dp[1 << 16];

int main(){
  int N;
  cin >> N;
  ll a[N][N];
  for(int i = 0; i < N; i++){
    for(int j = 0; j < N; j++){
      cin >> a[i][j];
    }
  }

  for(int msk = 0; msk < (1 << N); msk++){
    for(int i = 0; i < N; i++){
      for(int j = i; j < N; j++){
        if(msk & (1 << i)){
          if(msk & (1 << j)){
            cst[msk] += a[i][j];
          }
        }
      }
    }
  }

  for(int msk = 0; msk < (1 << N); msk++){
    for(int msk2 = msk; msk2 > 0; msk2 = (msk2 - 1) & msk){
      dp[msk] = max(dp[msk], dp[msk - msk2] + cst[msk2]);
    }
  }

  /*for(int msk = 0; msk < (1 << N); msk++){
    cout << "msk: " << msk << " " << cst[msk] << endl;
  }*/

  cout << dp[(1 << N) - 1] << endl;
  return 0;
}
