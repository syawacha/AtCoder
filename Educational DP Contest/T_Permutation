#include <algorithm>
#include <iostream>
#include <iomanip>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <cmath>
#include <stack>
#include <set>
#include <map>
typedef long long ll;
using namespace std;

const ll MOD = 1e9 + 7;

ll dp[3000][3000];

int main(){
  int N;
  cin >> N;
  string s;
  cin >> s;

  for(int j = 0; j < N; j++) dp[0][j] = 1;

  for(int i = 0; i < N; i++){
    ll sum[N + 1];
    sum[0] = 0;
    for(int j = 1; j <= N; j++) sum[j] = sum[j - 1] + dp[i][j - 1];

    if(s[i] == '<'){
      for(int j = 0; j < N; j++){
        dp[i + 1][j] = sum[N] - sum[j + 1];
        dp[i + 1][j] %= MOD;
      }
    }
    else {
      for(int j = 0; j < N - i - 1; j++){
        dp[i + 1][j] = sum[j + 1] - sum[0];
        dp[i + 1][j] %= MOD;
      }
    }
  }

  cout << dp[N - 1][0] << endl;
  return 0;
}
